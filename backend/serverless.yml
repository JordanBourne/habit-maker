org: jordanbourne
app: habit-maker
service: serverless-flask

plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-dynamodb-local

custom:
  userTableName: 'users-table-${self:provider.stage}'
  taskTableName: 'task-table-${self:provider.stage}'
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux
  dynamodb:
    start:
      migrate: true

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
  environment:
    USERS_TABLE: ${self:custom.userTableName}
    TASK_TABLE: ${self:custom.taskTableName}

functions:
  app:
    handler: wsgi.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  getUser:
    handler: wsgi.handler
    events:
      - http: 'GET /users/{proxy+}'
  createUser:
    handler: wsgi.handler
    events:
      - http: 'POST /users'

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.userTableName}
    TaskDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: taskId
            AttributeType: S
          -
            AttributeName: userId
            AttributeType: S
          -
            AttributeName: type
            AttributeType: S
          -
            AttributeName: priority
            AttributeType: S
          -
            AttributeName: parentTask
            AttributeType: S
          -
            AttributeName: childTasks
            AttributeType: S
          -
            AttributeName: taskName
            AttributeType: S
          -
            AttributeName: taskDetails
            AttributeType: S
          -
            AttributeName: completed
            AttributeType: S
          -
            AttributeName: dateCreated
            AttributeType: S
          -
            AttributeName: dateDue
            AttributeType: S
          -
            AttributeName: dateCompleted
            AttributeType: S
          -
            AttributeName: orderNumber
            AttributeType: S
          -
            AttributeName: timeEstimated
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.userTableName}